#include<bits/stdc++.h>
using namespace std;
//search index of a key value using tenary search;
int tenary_search(int arr[], int l, int r, int key)
{
    //loop will continue untill last index is greater than equal to first index for any segment;
    while(r>=l)
    {
        //mid index of 1st and 2nd segment;
        int mid1 = l + (r-l)/3;
        //mid index of 2nd and 3rd index;
        int mid2 = r - (r-l)/3;
        //if key value is equal to 1st mid index value then it will return 1st mid index;
        if(arr[mid1] == key)
            return mid1;
        //if key value is equal to 2nd mid index value then it will return 2nd mid index;
        if(arr[mid2] == key)
            return mid2;
        //if key value is less than 1st mid index then it will check for initial index to 1st mid index - 1;
        if(arr[mid1] > key)
            r = mid1 - 1;
        //if key value is less than 2nd mid index then it will check for 1st mid index + 1 to 2nd mid index - 1;
        else if(arr[mid2] > key)
        {
            l = mid1 + 1;
            r = mid2 - 1;
        }
        //if key value is greater than 2nd mid index then it will check for 2nd mid index + 1
        //to final index;
        else
            l = mid2 + 1;
    }
    //program will return -1 if the key value is not present in the given array;
    return -1;
}
int main()
{
    int arr[] = {10,12,15,18,20,25,36,40,45,56,85};
    int initial_index = 0;
    //size of the sorted array; 
    int final_index = sizeof(arr)-1;
    //key value that have to search;
    int key;
    cin>>key;
    //'idx' give index of the key value if it is present in the given array, otherwise give -1;
    int idx = tenary_search(arr, initial_index, final_index, key);
    if(idx == -1)
        cout << "key value is not present in the array::" << endl;
    else
        cout << "key value is present at index " << idx << endl;
    return 0;
}
